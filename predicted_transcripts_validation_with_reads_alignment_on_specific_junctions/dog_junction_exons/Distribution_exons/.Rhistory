x = x+10
x
hist(rnorm(1000))
hist(rnorm(100, mean = 2, sd = .2))
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
2+2
x=1
x
x = x+10
x
hist(rnorm(1000))
hist(rnorm(100, mean = 2, sd = .2))
---
title: "Mon premier document"
output:
html_document: default
pdf_document: default
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r cars}
summary(cars)
```
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
## Ma propre section
```{r}
2+2
x=1
x
```
```{r}
x = x+10
x
```
```{r}
hist(rnorm(1000))
```
```{r}
hist(rnorm(100, mean = 2, sd = .2))
```
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
2+2
x=1
x
x = x+10
x
hist(rnorm(1000))
hist(rnorm(100, mean = 2, sd = .2))
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
2+2
x=1
x
x = x+10
x
hist(rnorm(1000))
hist(rnorm(100, mean = 2, sd = .2))
unlink('Documents/these_nguillaudeux/Archives_docs/Formations/MOOC_reproductibilite/mooc-rr/module2/docu1_cache', recursive = TRUE)
# Install core Bioconductor packages
if (!requireNamespace("BiocManager"))
install.packages("BiocManager")
BiocManager::install()
# install biomartr 0.8.0
install.packages("biomartr", dependencies = TRUE)
# Install core Bioconductor packages
if (!requireNamespace("BiocManager"))
install.packages("BiocManager")
BiocManager::install()
# Install package dependencies
BiocManager::install("Biostrings", version = "3.8")
BiocManager::install("biomaRt", version = "3.8")
BiocManager::install("biomaRt", version = "3.8")
data_url = "https://raw.githubusercontent.com/vincentarelbundock/Rdatasets/master/csv/HistData/Wheat.csv"
data_url
data_url = "https://raw.githubusercontent.com/vincentarelbundock/Rdatasets/master/csv/HistData/Wheat.csv"
data_url = read.csv('/home/niguilla/Documents/these_nguillaudeux/Archives_docs/Formations/MOOC_reproductibilite/mooc-rr/mooc-rr/module3/eval_pairs/Wheat.csv')
data_url = read.csv('/home/niguilla/Documents/these_nguillaudeux/Archives_docs/Formations/MOOC_reproductibilite/mooc-rr/mooc-rr/eval_pairs/Wheat.csv')
data_url
Wheat = read.csv('/home/niguilla/Documents/these_nguillaudeux/Archives_docs/Formations/MOOC_reproductibilite/mooc-rr/mooc-rr/eval_pairs/Wheat.csv')
Wheat
data(Wheat)
# convenience function to fill area under a curve down to a minimum value
fillpoly <- function(x,y, low=min(y),  ...) {
n <- length(x)
polygon( c(x, x[n], x[1]), c(y, low, low), ...)
}
# For best results, this graph should be viewed with width ~ 2 * height
# Note use of type='s' to plot a step function for Wheat
#   and panel.first to provide a background grid()
#     The curve for Wages is plotted after the polygon below it is filled
with(Wheat, {
plot(Year, Wheat, type="s", ylim=c(0,105),
ylab="Price of the Quarter of Wheat (shillings)",
panel.first=grid(col=gray(.9), lty=1))
fillpoly(Year, Wages, low=0, col="lightskyblue", border=NA)
lines(Year, Wages, lwd=3, col="red")
})
# Lecture du tableau de l'ensemble des 89 blocs d'exons séparés
data_split_89 <- read.table("distri_exon_89_junctions_len_sep.csv", header = TRUE, sep = ",", dec=',')
head(data_split_89)
summary(data_split_89)
#####################################
# Sur les blocs exoniques de gauche #
#####################################
main=paste("Répartition de la taille des exons situés à gauche de chacun des", nrow((data_split_89)))
sub_main=paste("couples d'adjacence triés en fonction du brin +")
xlab="Length of exon blocks"
ylab="Number of blocks"
setwd("~/Documents/Software/gtf_validator_of_cgalcode_prediction/examples/validation_part2/dog_junction_exons")
# Lecture du tableau de l'ensemble des 89 blocs d'exons séparés
data_split_89 <- read.table("distri_exon_89_junctions_len_sep.csv", header = TRUE, sep = ",", dec=',')
head(data_split_89)
summary(data_split_89)
#####################################
# Sur les blocs exoniques de gauche #
#####################################
main=paste("Répartition de la taille des exons situés à gauche de chacun des", nrow((data_split_89)))
sub_main=paste("couples d'adjacence triés en fonction du brin +")
xlab="Length of exon blocks"
ylab="Number of blocks"
graph_kn <- plot(table(data_split_89$Left),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,4),
xlim=c(min(data_split_89$Left),max(data_split_89$Left)),
lwd=20,type="h",lend="butt",
las=1)
# Lecture du tableau de l'ensemble des 89 blocs d'exons séparés
data_split_89 <- read.table("distri_exon_89_junctions_len_sep.csv", header = TRUE, sep = ",", dec=',')
head(data_split_89)
summary(data_split_89)
#####################################
# Sur les blocs exoniques de gauche #
#####################################
main=paste("Répartition de la taille des exons situés à gauche de chacun des", nrow((data_split_89)))
sub_main=paste("couples d'adjacence triés en fonction du brin +")
xlab="Length of exon blocks"
ylab="Number of blocks"
graph_kn <- plot(table(data_split_89$Left),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,4),
xlim=c(min(data_split_89$Left),max(data_split_89$Left)),
lwd=20,type="h",lend="butt",
las=1)
xlim=c(0,1000,
graph_kn <- plot(table(data_split_89$Left),
graph_kn <- plot(table(data_split_89$Left),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,4),
xlim=c(0,1000),
lwd=20,type="h",lend="butt",
las=1)
*
s
s
graph_kn <- plot(table(data_split_89$Left),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,4),
xlim=c(0,1000),
lwd=20,type="h",lend="butt",
las=1)
setwd("~/Documents/Software/gtf_validator_of_cgalcode_prediction/examples/validation_part2/dog_junction_exons")
# Lecture du tableau de l'ensemble des 89 blocs d'exons séparés
data_split_89 <- read.table("distri_exon_89_junctions_len_sep.csv", header = TRUE, sep = ",", dec=',')
# Lecture du tableau de l'ensemble des 89 blocs d'exons séparés
data_split_89 <- read.table("distri_exon_89_junctions_len_sep.csv", header = TRUE, sep = ",", dec=',')
head(data_split_89)
summary(data_split_89)
# Lecture du tableau de l'ensemble des 89 blocs d'exons séparés
data_split_89 <- read.table("distri_exon_89_junctions_len_sep.csv", header = TRUE, sep = ",", dec=',')
head(data_split_89)
summary(data_split_89)
#####################################
# Sur les blocs exoniques de gauche #
#####################################
main=paste("Répartition de la taille des exons situés à gauche de chacun des", nrow((data_split_89)))
sub_main=paste("couples d'adjacence triés en fonction du brin +")
xlab="Length of exon blocks"
ylab="Number of blocks"
graph_kn <- plot(table(data_split_89$left),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,4),
xlim=c(min(data_split_89$Left),max(data_split_89$Left)),
lwd=20,type="h",lend="butt",
las=1)
graph_kn <- plot(table(data_split_89$left),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,4),
xlim=c(0,100),
lwd=20,type="h",lend="butt",
las=1)
graph_kn <- plot(table(data_split_89$left),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,4),
xlim=c(0,1550),
lwd=20,type="h",lend="butt",
las=1)
graph_kn <- plot(table(data_split_89$Left),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,4),
xlim=c(0,1550),
lwd=20,type="h",lend="butt",
las=1)
graph_kn <- plot(table(data_split_89$Left),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,4),
xlim=c(min(data_split_89$Left),max(data_split_89$Left)),
lwd=20,type="h",lend="butt",
las=1)
graph_kn <- plot(table(data_split_89$Left),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,4),
xlim=c(min(data_split_89$Left),max(data_split_89$Left)),
lwd=20,type="h",lend="butt",
las=1)
#####################################
# Sur les blocs exoniques de gauche #
#####################################
main=paste("Répartition de la taille des exons situés à droite de chacun des", nrow((data_split_89)))
sub_main=paste("couples d'adjacence triés en fonction du brin +")
xlab="Length of exon blocks"
ylab="Number of blocks"
graph_kn <- plot(table(data_split_89$Right),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,4),
xlim=c(min(data_split_89$Right),max(data_split_89$Right)),
lwd=20,type="h",lend="butt",
las=1)
graph_kn <- plot(table(data_split_89$Right),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,4),
xlim=c(min(data_split_89$Right),max(data_split_89$Right)),
lwd=20,type="h",lend="butt",
las=1)
# Lecture du tableau de l'ensemble des 89 blocs d'exons séparés
data_89 <- read.table("distri_exon_89_junctions_len_all.csv", header = TRUE, sep = ",", dec=',')
head(data_89)
summary(data_89)
# Lecture du tableau de l'ensemble des 89 blocs d'exons séparés
data_89 <- read.table("distri_exon_89_junctions_len_all.csv", header = TRUE, sep = ",", dec=',')
head(data_89)
summary(data_89)
main=paste("Répartition de la taille des", nrow(data_89), "blocs d'exons de chacun des", nrow(data_89)/2)
sub_main=paste("couples d'adjacence triés en fonction du brin +")
xlab="Length of exon blocks"
ylab="Number of blocks"
graph_kn <- plot(table(data_89$All_89),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,8),
xlim=c(min(data_89$All_89),max(data_89$All_89)),
lwd=20,type="h",lend="butt",
las=1)
graph_kn <- plot(table(data_89$All),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,8),
xlim=c(min(data_89$All_89),max(data_89$All_89)),
lwd=20,type="h",lend="butt",
las=1)
graph_kn <- plot(table(data_89$All),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,8),
xlim=c(min(data_89$All9),max(data_89$All)),
lwd=20,type="h",lend="butt",
las=1)
summary(data_89)
graph_kn <- plot(table(data_89$All),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,8),
xlim=c(min(data_89$All),max(data_89$All)),
lwd=20,type="h",lend="butt",
las=1)
# Lecture du tableau de l'ensemble des blocs d'exons
data <- read.table("distri_exon_junction_len_all.csv", header = TRUE, sep = ",", dec=',')
head(data)
summary(data)
# Lecture du tableau de l'ensemble des blocs d'exons
data <- read.table("distri_exon_junction_len_all.csv", header = TRUE, sep = ",", dec=',')
head(data)
summary(data)
# Lecture du tableau de l'ensemble des blocs d'exons séparés
data_split <- read.table("distri_exon_junction_len_sep.csv", header = TRUE, sep = ",", dec=',')
head(data_split)
summary(data_split)
sub_main=paste("triés en fonction du brin + pour les", nrow(data)/2, "couples d'adjacence spécifiques")
#####################################################################
# Répartition des blocs d'exons dans les couples d'adjacence totaux #
#####################################################################
main=paste("Répartition de la taille des", nrow(data), "blocs d'exons pour les", nrow(data)/2, "couples d'adjacence")
sub_main=paste("triés en fonction du brin + pour les", nrow(data)/2, "couples d'adjacence spécifiques")
xlab="Length of exon blocks"
ylab="Number of blocks"
graph_kn <- plot(table(data$All),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,10),
xlim=c(min(data$All),max(data$All)),
lwd=20,type="h",lend="butt",
las=1)
#####################################
# Sur les blocs exoniques de gauche #
#####################################
main=paste("Répartition de la taille des exons situés à gauche de chacun des", nrow((data_split)))
sub_main=paste("couples d'adjacence triés en fonction du brin +")
xlab="Length of exon blocks"
ylab="Number of blocks"
graph_kn <- plot(table(data_split$Left),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,4),
xlim=c(min(data_split$Left),max(data_split$Left)),
lwd=20,type="h",lend="butt",
las=1)
graph_kn <- plot(table(data_split$Left),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,5),
xlim=c(min(data_split$Left),max(data_split$Left)),
lwd=20,type="h",lend="butt",
las=1)
graph_kn <- plot(table(data_split$Left),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,7),
xlim=c(min(data_split$Left),max(data_split$Left)),
lwd=20,type="h",lend="butt",
las=1)
graph_kn <- plot(table(data_split$Left),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,6),
xlim=c(min(data_split$Left),max(data_split$Left)),
lwd=20,type="h",lend="butt",
las=1)
#####################################
# Sur les blocs exoniques de gauche #
#####################################
main=paste("Répartition de la taille des exons situés à droite de chacun des", nrow((data_split)))
sub_main=paste("couples d'adjacence triés en fonction du brin +")
xlab="Length of exon blocks"
ylab="Number of blocks"
graph_kn <- plot(table(data_split$Right),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,4),
xlim=c(min(data_split$Right),max(data_split$Right)),
lwd=20,type="h",lend="butt",
las=1)
graph_kn <- plot(table(data_split$Right),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,6),
xlim=c(min(data_split$Right),max(data_split$Right)),
lwd=20,type="h",lend="butt",
las=1)
graph_kn <- plot(table(data_split$Right),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,7),
xlim=c(min(data_split$Right),max(data_split$Right)),
lwd=20,type="h",lend="butt",
las=1)
graph_kn <- plot(table(data_split$Right),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,8),
xlim=c(min(data_split$Right),max(data_split$Right)),
lwd=20,type="h",lend="butt",
las=1)
graph_kn <- plot(table(data_split$Right),
#col="grey",
#col = rainbow(4, start = 0.7, end = 0.9),
col = rgb((1:4)/4, 0, 0),
main=paste(main,'\n',sub_main),
#col = c("red", "blue"),
xlab=xlab, ylab=ylab,
ylim=c(0,7),
xlim=c(min(data_split$Right),max(data_split$Right)),
lwd=20,type="h",lend="butt",
las=1)
